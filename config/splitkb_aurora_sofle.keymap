/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};

&sensors { triggers-per-rotation = <28>; };

/ {
    behaviors {
        kp2mo: kp2mo {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
        };

        enhe_doubleclick: enhe_doubleclick {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N>, <&kp RA(N)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&kp ESC    &kp N1  &kp N2        &kp N3    &kp N4          &kp N5                                       &kp N6          &kp N7  &kp N8     &kp N9     &kp N0    &kp GRAVE
&kp MINUS  &kp Q   &kp W         &kp E     &kp R           &kp T                                        &kp Y           &kp U   &kp I      &kp O      &kp P     &kp BSPC
&kp TAB    &kp A   &kp S         &kp D     &kp F           &kp G                                        &kp H           &kp J   &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X         &kp C     &kp V           &kp B            &kp C_MUTE    &kp CAPSLOCK  &kp N           &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                   &kp LEFT_WIN  &kp LALT  &kp2mo 2 SPACE  &mt RCTRL ENTER  &to 3         &mo 3         &kp2mo 1 SPACE  &mo 2   &kp RALT   &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        nav {
            bindings = <
&trans       &trans     &trans      &trans        &trans  &trans                    &trans     &trans       &trans     &trans     &trans         &trans
&trans       &trans     &trans      &trans        &trans  &trans                    &kp PG_DN  &kp HOME     &kp UP     &kp END    &trans         &trans
&kp LS(TAB)  &kp LCTRL  &kp LSHIFT  &kp LEFT_ALT  &trans  &trans                    &kp PG_DN  &kp LEFT     &kp DOWN   &kp RIGHT  &kp DEL        &kp BSPC
&trans       &trans     &trans      &trans        &trans  &trans  &trans    &trans  &trans     &kp LS(TAB)  &kp ENTER  &kp TAB    &kp BACKSLASH  &trans
                        &trans      &trans        &trans  &trans  &trans    &trans  &trans     &trans       &trans     &trans
            >;
        };

        symbols {
            bindings = <
&trans     &trans            &trans             &trans                &trans                 &trans                         &trans         &trans         &trans        &trans     &trans  &trans
&kp MINUS  &kp EXCL          &kp AT             &kp HASH              &kp DOLLAR             &kp PERCENT                    &kp CARET      &kp AMPERSAND  &kp ASTERISK  &trans     &trans  &trans
&trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                         &kp BACKSLASH  &kp MINUS      &kp PLUS      &kp EQUAL  &trans  &trans
&trans     &kp LESS_THAN     &kp GREATER_THAN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans       &trans    &trans  &trans         &trans         &trans        &trans     &trans  &trans
                             &trans             &trans                &trans                 &trans       &trans    &trans  &trans         &trans         &trans        &trans
            >;
        };

        fn_numbers {
            bindings = <
&kp F1      &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans   &trans   &trans
&bt BT_NXT  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7  &kp N8  &kp N9   &kp N0   &trans
&trans      &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans   &trans
                    &trans  &trans  &trans  &trans  &to 0     &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
