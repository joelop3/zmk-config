/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};

&sensors { triggers-per-rotation = <28>; };

/ {
    behaviors {
        kp2mo: kp2mo {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
        };

        enhe_doubleclick: enhe_doubleclick {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N>, <&kp RA(N)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        enter2 {
            bindings = <&kp ENTER>;
            key-positions = <53 56>;
            slow-release;
            timeout-ms = <200>;
            require-prior-idle-ms = <100>;
        };

        capsMo {
            bindings = <&caps_word>;
            key-positions = <54 55>;
            slow-release;
            timeout-ms = <200>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp MINUS   &kp N1  &kp N2   &kp N3        &kp N4  &kp N5                                            &kp N6     &kp N7  &kp N8      &kp N9         &kp N0    &kp EQUAL
&kp TAB     &kp Q   &kp W    &kp E         &kp R   &kp T                                             &kp Y      &kp U   &kp I       &kp O          &kp P     &kp BACKSPACE
&kp LSHIFT  &kp A   &kp S    &kp D         &kp F   &kp G                                             &kp H      &kp J   &kp K       &kp L          &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X    &kp C         &kp V   &kp B      &kp C_MUTE          &caps_word         &kp N      &kp M   &kp COMMA   &kp DOT        &kp FSLH  &kp ENTER
                    &kp ESC  &kp LEFT_ALT  &mo 1   &kp LCTRL  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp SPACE  &mo 2   &kp DELETE  &kp RIGHT_WIN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>,
                <&inc_dec_kp LC(Z) LC(LS(Z))>;
        };

        num {
            bindings = <
&kp F1     &kp F2           &kp F3       &kp F4    &kp F5      &kp F6                                                      &kp F7     &kp F8         &kp F9        &kp F10               &kp F11                &kp F12
&kp MINUS  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                                                 &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&trans     &kp N1           &kp N2       &kp N3    &kp N4      &kp N5                                                      &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp GRAVE
&trans     &trans           &trans       &trans    &trans      &trans       &trans                  &trans                 &trans     &trans         &trans        &trans                &kp BACKSLASH          &trans
                            &trans       &trans    &trans      &trans       &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &trans     &trans         &trans        &trans
            >;
        };

        nav {
            bindings = <
&bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &bl BL_TOG  &rgb_ug RGB_TOG  &trans                                     &trans  &trans         &trans          &trans         &trans           &trans
&trans      &trans      &trans      &trans      &trans           &trans                                     &trans  &kp HOME       &kp UP_ARROW    &kp END        &kp PRINTSCREEN  &trans
&trans      &trans      &trans      &trans      &trans           &trans                                     &trans  &kp LEFT       &kp DOWN_ARROW  &kp RIGHT      &trans           &trans
&trans      &trans      &trans      &trans      &trans           &trans  &trans            &trans           &trans  &kp PAGE_DOWN  &trans          &kp PAGE_DOWN  &trans           &trans
                        &trans      &trans      &trans           &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE  &trans  &trans         &trans          &trans
            >;
        };
    };
};
