/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    behaviors {
        kp2mo: kp2mo {
            compatible = "zmk,behavior-hold-tap";
            label = "KP2MO";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            retro-tap;
        };
    };

    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <51 57>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp ESC        &kp N1  &kp N2    &kp N3     &kp N4          &kp N5                                    &kp N6          &kp N7     &kp N8     &kp N9    &kp N0    &kp EQUAL
&kp TAB        &kp Q   &kp W     &kp E      &kp R           &kp T                                     &kp Y           &kp U      &kp I      &kp O     &kp P     &kp BACKSPACE
&kp BACKSLASH  &kp A   &kp S     &kp D      &kp F           &kp G                                     &kp H           &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp DELETE     &kp Z   &kp X     &kp C      &kp V           &kp B           &kp C_MUTE    &bl BL_TOG  &kp N           &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp ENTER
                       &kp LALT  &kp LMETA  &kp LEFT_SHIFT  &kp2mo 1 SPACE  &kp LCTRL     &kp RCTRL   &kp2mo 1 SPACE  &kp SPACE  &kp RMETA  &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOL_UP>,
                <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        number {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1     &kp F2  &kp F3    &kp F4                &kp F5          &kp F6                       &kp F7     &kp F8            &kp F9                 &kp F10          &kp F11  &kp F12
&kp UNDER  &kp N1  &kp N2    &kp N3                &kp N4          &kp N5                       &kp N6     &kp N7            &kp N8                 &kp N9           &kp N0   &kp PLUS
&trans     &trans  &kp LBKT  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp MINUS                    &kp EQUAL  &kp RIGHT_BRACE   &kp RIGHT_PARENTHESIS  &kp RBKT         &trans   &kp GRAVE
&trans     &trans  &trans    &trans                &kp LESS_THAN   &kp SLASH  &trans    &trans  &kp RA(N)  &kp GREATER_THAN  &kp UP_ARROW           &trans           &trans   &trans
                   &trans    &trans                &trans          &trans     &trans    &trans  &trans     &kp LEFT_ARROW    &kp DOWN_ARROW         &kp RIGHT_ARROW
            >;
        };
    };
};
