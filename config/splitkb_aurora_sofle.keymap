/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};

&sensors { triggers-per-rotation = <28>; };

/ {
    behaviors {
        kp2mo: kp2mo {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
        };

        enhe_doubleclick: enhe_doubleclick {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N>, <&kp RA(N)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&kp GRAVE  &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                                               &kp N6          &kp N7    &kp N8     &kp N9     &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W      &kp E     &kp R     &kp T                                                &kp Y           &kp U     &kp I      &kp O      &kp P     &kp BSPC
&kp TAB    &kp A   &kp S      &kp D     &kp F     &kp G                                                &kp H           &kp J     &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B           &kp C_MUTE         &kp LOCKING_CAPS  &kp N           &kp M     &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                   &kp LCTRL  &kp LALT  &kp LGUI  &kp2mo 2 LCTRL  &mt LCTRL ENTER    &kp SPACE         &kp2mo 1 SPACE  &kp RGUI  &kp RALT   &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        number_navigation {
            bindings = <
&trans        &trans     &trans     &trans  &trans  &trans                    &trans     &trans       &trans     &trans     &trans         &trans
&trans        &trans     &trans     &kp N7  &kp N8  &kp N9                    &kp PG_DN  &kp HOME     &kp UP     &kp END    &trans         &trans
&kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &kp N4  &kp N5  &kp N6                    &kp PG_DN  &kp LEFT     &kp DOWN   &kp RIGHT  &kp DEL        &kp BSPC
&trans        &trans     &kp N0     &kp N1  &kp N2  &kp N3  &trans    &trans  &trans     &kp LS(TAB)  &kp ENTER  &kp TAB    &kp BACKSLASH  &trans
                         &trans     &trans  &trans  &trans  &trans    &trans  &to 3      &trans       &trans     &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans     &trans            &trans                &trans          &trans                           &trans            &trans           &trans                 &trans            &trans             &trans
&trans  &kp EXCL   &kp AT            &kp HASH              &kp DOLLAR      &kp PERCENT                      &kp CARET         &kp AMPERSAND    &kp ASTERISK           &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp GRAVE
&trans  &kp MINUS  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LESS_THAN                    &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RBKT          &kp PLUS           &kp EQUAL
&trans  &trans     &trans            &trans                &trans          &trans         &trans    &trans  &trans            &trans           &trans                 &trans            &trans             &trans
                   &trans            &trans                &trans          &to 3          &trans    &trans  &trans            &trans           &trans                 &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &bl BL_TOG  &rgb_ug RGB_TOG  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans      &trans      &trans      &trans           &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans      &trans      &trans      &trans           &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans      &trans      &trans      &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans      &trans      &trans           &tog 3  &trans    &trans  &tog 3  &trans  &trans  &trans
            >;
        };
    };
};
